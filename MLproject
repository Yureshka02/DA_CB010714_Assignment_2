name: player_performance_predictor

entry_points:
  train:
    command: "python src/model_training.py --training_seasons='{training_seasons}' --test_season={test_season} --n_estimators={n_estimators} --random_state={random_state}"
    parameters:
      training_seasons: {type: string, default: "1996-1999", help: "Range of seasons for training (e.g., 1996-1999)"}
      test_season: {type: int, default: 2000, help: "The season to test predictions against"}
      n_estimators: {type: int, default: 100, help: "Number of estimators for RandomForestRegressor"}
      random_state: {type: int, default: 42, help: "Random state for reproducibility"}

  predict:
    command: "python src/model_prediction.py --model_name='{model_name}' --model_stage='{model_stage}' --input_season={input_season} --output_file_path='{output_file_path}'"
    parameters:
      model_name: {type: string, default: "PlayerPerformanceModel", help: "Name of the model in MLflow Model Registry (e.g., PlayerPerformanceModel)"}
      model_stage: {type: string, default: "None", help: "Stage of the model to use (e.g., 'Production', 'Staging', 'None' for latest)"}
      input_season: {type: int, default: 2023, help: "The season for which to make predictions (e.g., 2023)"}
      output_file_path: {type: string, default: "data/predictions/season_2023_predictions.csv", help: "Path to save the prediction results CSV file"}